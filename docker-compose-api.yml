version: "3.7"

services:

  val_species-db-postgis:
    image: jloomisvce/dashboard:val_species-db-postgis
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    build:
      context: ./val_species-db
    ports:
      - '6543:5432'
    volumes:
      - val_species-db:/var/lib/postgresql/data

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      # on localhost, use 8080 if apache2 or other already binds 80
      #- "8080:80"
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  val_species-api:
    image: jloomisvce/dashboard:val_species-api
    build:
      context: ./val_species-api
    environment:
      DB_SCHEMA: val_species
      DB_USER: postgres
      DB_PASSWORD: postgres
      # postgres database host must be the name of the postgres docker image, above
      DB_HOST: val_species-db-postgis
      DB_PORT: 5432
      DB_SSL: 0
      # for nginx to work, this must match the url and host name. use /etc/hosts to map these onto localhost, etc.
      #VIRTUAL_HOST: api.val_species.vtatlasoflife.org
      VIRTUAL_HOST: localhost
    depends_on:
      - val_species-db-postgis
      - nginx-proxy
    # DO NOT define both Dockerfile ENTRYPOINT and command here (to call wait-for-pg.sh).
    # Calling both causes 2 calls to pm2, a fork-attempt, then error. Do one or the other.
    # Tested this command with Dockerfile ENTRYPOINT commented, and it works.
    #command: ["./wait-for-pg.sh", "val_species-db-postgis", "npm", "run", "pm2"]
#    ports:
#      - '3000:3000'

volumes:
  val_species-db:
